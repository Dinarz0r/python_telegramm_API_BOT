import json
import re
import threading
import time

from utility import mess_wait
from telebot import TeleBot, types, apihelper
import requests
import multiprocessing

bot = TeleBot('1921101611:AAHACgqfBNMQJGpFIGk2NDrBmZhpNQzYf90')
headers = {
    'x-rapidapi-key': "4d9d661215mshca27e4738c71a90p129c4ajsn858bb7dd9791",
    'x-rapidapi-host': "hotels4.p.rapidapi.com"
}
info = '‚óè /help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n' \
       '‚óè /lowprice ‚Äî –≤—ã–≤–æ–¥ —Å–∞–º—ã—Ö –¥–µ—à—ë–≤—ã—Ö –æ—Ç–µ–ª–µ–π –≤ –≥–æ—Ä–æ–¥–µ\n' \
       '‚óè /highprice ‚Äî –≤—ã–≤–æ–¥ —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö –æ—Ç–µ–ª–µ–π –≤ –≥–æ—Ä–æ–¥–µ\n' \
       '‚óè /bestdeal ‚Äî –≤—ã–≤–æ–¥ –æ—Ç–µ–ª–µ–π, –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ —Ü–µ–Ω–µ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –æ—Ç —Ü–µ–Ω—Ç—Ä–∞\n'
user_info_dict = {'check_choice_city': False, 'city': False}
json_data = dict()


@bot.message_handler(commands=['start', 'help'])
def handle_start_help(message):
    if message.from_user.username:
        username = message.from_user.username
    else:
        username = ''
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtna = types.KeyboardButton('üè®–ù–∞–π—Ç–∏ –æ—Ç–µ–ª—å')
    itembtnv = types.KeyboardButton('üìó –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ')
    itembtnd = types.KeyboardButton('üöß –û —Å–µ—Ä–≤–∏—Å–µ')
    markup.row(itembtna, itembtnv)
    markup.row(itembtnd)
    if message.text == '/start':
        start_help_text = f"–ü—Ä–∏–≤–µ—Ç {username}, —è –ë–û–¢ Too Easy Travel‚úÖ,\n" \
                          "–ò —è —Å–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Ç–µ–±—è –æ—Ç–µ–ª—å üè® –∏–ª–∏ —Ö–æ—Å—Ç–µ–ª üè©"
        bot.send_message(message.from_user.id, start_help_text, reply_markup=markup)
    else:
        bot.send_message(message.from_user.id, info, reply_markup=markup)


@bot.message_handler(content_types=['text', 'document', 'audio', 'photo'])
def get_text_messages(message):
    global json_data, user_info_dict

    if message.text == 'üè®–ù–∞–π—Ç–∏ –æ—Ç–µ–ª—å':
        bot.send_message(message.from_user.id, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –æ—Ç–µ–ª—å?")
        user_info_dict['check_choice_city'] = True
        # lowprice = types.InlineKeyboardButton(text='–°–∞–º—ã–π –¥–µ—à—ë–≤—ã–π –≤ –≥–æ—Ä–æ–¥–µ', callback_data='lowprice')
        # highprice = types.InlineKeyboardButton(text='–°–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π –≤ –≥–æ—Ä–æ–¥–µ', callback_data='highprice')
        # bestdeal = types.InlineKeyboardButton(text='—Ñ–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –æ—Ç —Ü–µ–Ω—Ç—Ä–∞',
        #                                       callback_data='bestdeal')
        #
        # markup.add(lowprice, highprice, bestdeal, row_width=True)

        # bot.send_message(message.from_user.id, "üåç –í—ã–±–µ—Ä–µ—Ç–µ –æ–∫—Ä—É–≥", reply_markup=markup)

    elif message.text == 'üìó –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ':
        bot.send_message(message.from_user.id, info)

    elif user_info_dict['check_choice_city']:

        user_info_dict['check_choice_city'] = False

        message_info = bot.send_message(message.from_user.id, '–ò–¥–µ—Ç –ø–æ–∏—Å–∫ –æ—Ç–µ–ª—è')

        pill2kill = threading.Event()
        proc = threading.Thread(target=mess_wait,
                                args=(pill2kill, message_info.chat.id, message_info.id, message_info.text))
        proc.start()

        markup = types.InlineKeyboardMarkup()
        url = "https://hotels4.p.rapidapi.com/locations/search"
        querystring = {"query": message.text, "locale": "ru_RU"}
        response = requests.request("GET", url, headers=headers, params=querystring)
        pill2kill.set()
        proc.join()
        apihelper.delete_message('1921101611:AAHACgqfBNMQJGpFIGk2NDrBmZhpNQzYf90', message_info.chat.id,
                                 message_info.id)
        json_data = json.loads(response.text)
        count = 0
        for entities_city in json_data['suggestions'][0]['entities']:
            patterns_span = re.compile(r'<.*?>')
            add = types.InlineKeyboardButton(text=patterns_span.sub('', entities_city['caption']),
                                             callback_data=str(count))
            markup.add(add)
            count += 1
            print(patterns_span.sub('', entities_city['caption']))
        user_info_dict['city'] = True
        bot.send_message(message.from_user.id, "üåç –£—Ç–æ—á–Ω–∏—Ç–µ –≥–æ—Ä–æ–¥", reply_markup=markup)

    elif message.text == '/lowprice':
        """–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è:
        1. –ì–æ—Ä–æ–¥, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫.
        2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ –±–æ–ª—å—à–µ
        –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞).
        """
        print('–¢—É—Ç –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∞ –ª–æ—É –ø—Ä–∞–π—Å')
    elif message.text == '/highprice':
        """–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è:
        1. –ì–æ—Ä–æ–¥, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫.
        2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ –±–æ–ª—å—à–µ
        –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞).
        """
        print('–¢—É—Ç –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∞ highprice')

        url = "https://hotels4.p.rapidapi.com/locations/search"

        querystring = {"query": "–ú–æ—Å–∫–≤–∞", "locale": "ru_RU"}

        response = requests.request("GET", url, headers=headers, params=querystring)

        print(response.text)

    elif message.text == '/bestdeal':
        """
        –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è:
        1. –ì–æ—Ä–æ–¥, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫.
        2. –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω.
        3. –î–∏–∞–ø–∞–∑–æ–Ω —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Ç–µ–ª—å –æ—Ç —Ü–µ–Ω—Ç—Ä–∞.
        4. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ –±–æ–ª—å—à–µ
        –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞).
        """
        print('–¢—É—Ç –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∞ bestdeal')


@bot.callback_query_handler(func=lambda c: True)
def inline(c):
    global json_data, user_info_dict
    if user_info_dict['city']:
        user_info_dict['city'] = False
        print('id –≥–æ—Ä–æ–¥–∞', json_data['suggestions'][0]['entities'][int(c.data)]['destinationId'])
        apihelper.delete_message('1921101611:AAHACgqfBNMQJGpFIGk2NDrBmZhpNQzYf90', c.message.chat.id,
                                 c.message.message_id)


if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True, interval=0)
        except Exception as ex:
            # TODO –î–æ—Ä–∞–±–æ—Ç–∞—å –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
            pass
